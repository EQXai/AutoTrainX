apiVersion: apps/v1
kind: Deployment
metadata:
  name: autotrainx-api
  namespace: autotrainx
  labels:
    app.kubernetes.io/name: autotrainx
    app.kubernetes.io/component: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: autotrainx
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: autotrainx
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      imagePullSecrets:
      - name: registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: autotrainx-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: LOG_LEVEL
        - name: API_WORKERS
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: API_WORKERS
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: autotrainx-secrets
              key: SECRET_KEY
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: autotrainx-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: REDIS_URL
        - name: MAX_CONCURRENT_JOBS
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: MAX_CONCURRENT_JOBS
        - name: WORKSPACE_PATH
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: WORKSPACE_PATH
        - name: MODELS_PATH
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: MODELS_PATH
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: autotrainx-config
              key: PROMETHEUS_ENABLED
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: workspace
          mountPath: /app/workspace
        - name: models
          mountPath: /app/models
        - name: database
          mountPath: /app/DB
        - name: logs
          mountPath: /app/logs
        - name: presets
          mountPath: /app/Presets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: autotrainx-workspace-pvc
      - name: models
        persistentVolumeClaim:
          claimName: autotrainx-models-pvc
      - name: database
        persistentVolumeClaim:
          claimName: autotrainx-database-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: autotrainx-logs-pvc
      - name: presets
        configMap:
          name: presets-config
          optional: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: autotrainx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/component: proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        livenessProbe:
          httpGet:
            path: /health-nginx
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health-nginx
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
# AutoTrainX API virtual host configuration
# This file can be used instead of the main nginx.conf for more modular configuration

server {
    listen 80;
    server_name autotrainx.example.com www.autotrainx.example.com;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name autotrainx.example.com www.autotrainx.example.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/autotrainx.example.com/cert.pem;
    ssl_private_key /etc/nginx/ssl/autotrainx.example.com/key.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_prod:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=upload_prod:10m rate=5r/m;
    
    # Main API proxy
    location /api/ {
        limit_req zone=api_prod burst=10 nodelay;
        
        proxy_pass http://autotrainx_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Production timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }
    
    # WebSocket support
    location /ws {
        proxy_pass http://autotrainx_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # File uploads with stricter limits
    location /api/v1/datasets/upload {
        limit_req zone=upload_prod burst=3 nodelay;
        
        proxy_pass http://autotrainx_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # File upload limits
        client_max_body_size 500M;
        proxy_connect_timeout 300s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }
    
    # API documentation (protected in production)
    location ~ ^/(docs|redoc|openapi.json) {
        # Uncomment to restrict access to documentation
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        proxy_pass http://autotrainx_api;
        proxy_set_header Host $host;
    }
    
    # Health check (accessible without authentication)
    location /health {
        proxy_pass http://autotrainx_api;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Root redirect
    location = / {
        return 301 /docs;
    }
    
    # Block sensitive files
    location ~ /\.|\.env|\.conf|\.config|\.toml|\.db$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}